{"version":3,"sources":["utils/request.js","models/main.js","services/api.js","models/bag.js","store/index.js","components/DrawBtn/index.less","components/DrawBtn/index.js","components/BoxList/index.js","components/BoxList/index.less","components/FloatArea/index.js","components/FloatArea/index.less","components/Bags/index.js","components/Bags/index.less","components/Rules/index.js","components/Rules/index.less","components/Main/index.js","components/Main/index.less","index.js"],"names":["request","url","params","options","method","Promise","resolve","code","data","msg","namespace","state","aaa","boxList","reducers","getBoxList","async","payload","callback","put","response","list","recommend","removeAll","bagList","getBagList","videos","MODEL_LIST","Object","keys","models","map","m","filter","useSelector","create","devtools","subscribeWithSelector","set","get","reduce","pre","cur","newReducers","forEach","reducerName","dispatch","type","split","newState","curState","useDispatch","store","className","bag","console","log","useEffect","main","boxId","res","unSub","subscribe","useSubscribe","prevData","App","path","exact","component","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.ebd9d90e.chunk.js","sourcesContent":["/* \nimport { httpClient } from '@shark/data';\nimport { GSON } from '@shark/base';\n\nexport default function request(url, params, options = {}) {\n    const { method = 'get' } = options || {};\n\n    return new Promise((resolve) => {\n        httpClient[method](String, url, params, {\n            noCache: true\n        }).subscribe((res) => {\n            let data = res.data || {};\n\n            if (res.error === 0) {\n                if (typeof res.data === 'string') {\n                    data = GSON.parse(data) || {};\n                }\n                resolve({\n                    code: 0,\n                    data,\n                    msg: res.msg\n                });\n            } else {\n                resolve({\n                    code: res.error,\n                    data: null,\n                    msg: res.msg\n                });\n            }\n        });\n    });\n}\n*/\nexport default function request(url, params, options = {}) {\n  const { method = 'get' } = options || {};\n\n  return new Promise((resolve) => {\n    resolve({ code: 0, data: [], msg: '' });\n  });\n}\n","import { getBoxList } from '../services/api';\n\nexport default {\n  namespace: 'main',\n  state: {\n    aaa: 'majie',\n    boxList: []\n  },\n  reducers: {\n    // 获取盲盒\n    getBoxList: async ({ payload, callback }, { put }) => {\n      const response = await getBoxList(payload);\n      const list =\n        response.code === 0 && response.data.recommend\n          ? response.data.recommend\n          : [];\n\n      put({ boxList: list });\n      if (callback) {\n        callback(list);\n      }\n    },\n    removeAll: ({ payload }, { put }) => put({ boxList: [] })\n  }\n};\n","import request from '../utils/request';\n\n// 获取盲盒列表\nexport async function getBoxList() {\n  return request('/wgapi/vod/front/hover/getDropMenuInfo');\n}\n\n// 背包列表\nexport async function getBagList() {\n  return request('/wgapi/vod/front/hover/getDropMenuInfo');\n}\n\n// for post request\nexport async function test(params) {\n  return request('/api/test', params, { method: 'post' });\n}\n","import { getBagList } from '../services/api';\n\nexport default {\n  namespace: 'bag',\n  state: {\n    bagList: []\n  },\n  reducers: {\n    // 获取背包列表\n    getBagList: async ({ payload }, { put }) => {\n      const response = await getBagList();\n\n      put({\n        bagList:\n          response.code === 0 && response.data.videos\n            ? response.data.videos\n            : []\n      });\n    },\n    removeAll: ({ payload }, { put }) => put({ bagList: [] })\n  }\n};\n","import create from 'zustand';\nimport { devtools, subscribeWithSelector } from 'zustand/middleware';\nimport * as models from '../models';\n\n// model列表\nconst MODEL_LIST = Object.keys(models)\n  .map((m) => models[m])\n  .filter((m) => m.namespace);\n\nexport const useSelector = create(\n  devtools(\n    subscribeWithSelector((set, get) => {\n      // 合并models里的state和reducers，state以namespace为key，reducers格式为namespace/reducerName\n      const { state, reducers } = MODEL_LIST.reduce(\n        (pre, cur) => {\n          const newReducers = {};\n\n          Object.keys(cur.reducers).forEach((reducerName) => {\n            newReducers[`${cur.namespace}/${reducerName}`] =\n              cur.reducers[reducerName];\n          });\n\n          return {\n            ...pre,\n            state: {\n              ...pre.state,\n              [cur.namespace]: { ...cur.state }\n            },\n            reducers: {\n              ...pre.reducers,\n              ...newReducers\n            }\n          };\n        },\n        { state: {}, reducers: {} }\n      );\n\n      // 构建dispatch方法，分发action到reducers\n      return {\n        ...state,\n        dispatch: async ({ type, payload, callback }) => {\n          if (reducers[type]) {\n            const namespace = type.split('/')[0];\n\n            await reducers[type](\n              { payload, callback },\n              {\n                put: (newState = {}) => {\n                  const curState = get();\n\n                  set({\n                    [namespace]: {\n                      ...curState[namespace],\n                      ...newState\n                    }\n                  });\n                }\n              }\n            );\n          }\n        }\n      };\n    }),\n    'BlindBoxStore'\n  )\n);\n\n// 获取dispatch\nexport const useDispatch = () => {\n  const dispatch = useSelector((store) => store.dispatch);\n\n  return dispatch;\n};\n\n// 监听数据改变\nexport const useSubscribe = (...args) => {\n  const unsubscribe = useSelector.subscribe(...args);\n\n  // 返回解除监听方法\n  return unsubscribe;\n};\n","export default __webpack_public_path__ + \"static/media/index.c7a1f351.less\";","import React from 'react';\nimport './index.less';\n\nexport default () => {\n  return <div className=\"BlindBox-drawBtn\">抽奖按钮</div>;\n};\n","import React from 'react';\nimport './index.less';\n\nexport default () => {\n  return <div className=\"BlindBox-boxList\">盲盒列表+奖品列表</div>;\n};\n","export default __webpack_public_path__ + \"static/media/index.1bdea695.less\";","import React from 'react';\nimport './index.less';\n\nexport default () => {\n  return <div className=\"BlindBox-floatArea\">飘屏+剩余抽奖券+抽奖提示信息</div>;\n};\n","export default __webpack_public_path__ + \"static/media/index.717fe8a8.less\";","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from '../../store';\nimport './index.less';\n\nexport default () => {\n  const bagList = useSelector(({ bag }) => bag.bagList);\n  const dispatch = useDispatch();\n\n  console.log('===>bagList', bagList);\n\n  useEffect(() => {\n    dispatch({\n      type: 'bag/getBagList',\n      payload: {}\n    });\n  }, []);\n\n  return <div className=\"BlindBox-bags\">我的背包</div>;\n};\n","export default __webpack_public_path__ + \"static/media/index.7553cb79.less\";","import React from 'react';\nimport './index.less';\n\nexport default () => {\n  return <div className=\"BlindBox-rules\">玩法规则</div>;\n};\n","export default __webpack_public_path__ + \"static/media/index.61b2092a.less\";","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch, useSubscribe } from '../../store';\nimport DrawBtn from '../DrawBtn';\nimport BoxList from '../BoxList';\nimport FloatArea from '../FloatArea';\nimport Bags from '../Bags';\nimport Rules from '../Rules';\nimport './index.less';\n\nexport default () => {\n  const boxList = useSelector(({ main }) => main.boxList);\n  const dispatch = useDispatch();\n\n  console.log('===>boxList', boxList);\n\n  useEffect(() => {\n    dispatch({\n      type: 'main/getBoxList',\n      payload: {\n        boxId: 123\n      },\n      callback: (res) => {\n        console.log('===>res', res);\n      }\n    });\n\n    // 监听store内某个数据变化示例\n    const unSub = useSubscribe(\n      ({ main }) => main.boxList,\n      (data, prevData) => {\n        console.log('===>subscription:', data, prevData);\n      }\n    );\n\n    return () => {\n      unSub();\n    };\n  }, []);\n\n  return (\n    <div className=\"BlindBox-Main\">\n      <Bags />\n      <Rules />\n      <div className=\"BlindBox-Bottom\">\n        <FloatArea />\n        <BoxList />\n        <DrawBtn />\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/index.5dddfef3.less\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Main from './components/Main';\nimport './common/style.css';\n\nconst App = () => (\n  <HashRouter>\n    <Switch>\n      <Route path=\"/\" exact component={Main} />\n    </Switch>\n  </HashRouter>\n);\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n\n// updated\n"],"sourceRoot":""}